plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
}

group 'com.example'
version '1.0.0'

repositories {
    mavenCentral()
}

ext {
    javaFxVersion = '17.0.2'
}

sourceCompatibility = '17'
targetCompatibility = '17'

javafx {
    version = javaFxVersion
    modules = ['javafx.controls', 'javafx.base', 'javafx.graphics', 'javafx.fxml']
}

dependencies {
    implementation "org.openjfx:javafx-controls:${javaFxVersion}:win"
    implementation "org.openjfx:javafx-base:${javaFxVersion}:win"
    implementation "org.openjfx:javafx-graphics:${javaFxVersion}:win"
    implementation "org.openjfx:javafx-fxml:${javaFxVersion}:win"
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.0'
}

application {
    mainModule = 'com.example.patientviewer'
    mainClass = 'com.example.patientviewer.PatientViewerApp'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs += [
            '--module-path', classpath.asPath
    ]
}

jlink {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    addOptions('--bind-services')
    forceMerge('jackson')

    launcher {
        name = 'PatientViewer'
        jvmArgs = ['-Xms128m', '-Xmx512m']
    }

    mergedModule {
        // Removed duplicate java.desktop
        requires('java.base')
        requires('java.net.http')
        additive = true
    }

    jpackage {
        installerType = 'exe'
        outputDir = 'installer'
        imageName = 'PatientViewer'
        skipInstaller = false

        appVersion = '1.0.0'
        vendor = 'Example'


        installerOptions = [
                '--win-dir-chooser',
                '--win-menu',
                '--win-shortcut',
                '--win-per-user-install',
                '--win-menu-group', 'PatientViewer',
                '--description', 'Patient Viewer Application',
                '--vendor', 'Example',
                '--verbose'
        ]

        jvmArgs = ['-Xms128m', '-Xmx512m']
    }
}

run {
    doFirst {
        jvmArgs = [
                '--module-path', classpath.asPath,
                '--add-modules', 'ALL-MODULE-PATH'
        ]
    }
}

task cleanInstaller(type: Delete) {
    delete "${buildDir}/installer"
}

tasks.named('jpackage').configure {
    dependsOn(cleanInstaller)
}